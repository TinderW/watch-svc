//
// WatchAllOfAttributes.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct WatchAllOfAttributes: Codable, JSONEncodable, Hashable {

    public var watchId: String
    public var name: String
    public var description: String
    public var price: String
    public var currency: String
    public var refNumber: String
    public var waterResistance: String
    public var gender: String
    public var family: String
    public var familyDescription: String
    public var photo: String

    public init(watchId: String, name: String, description: String, price: String, currency: String, refNumber: String, waterResistance: String, gender: String, family: String, familyDescription: String, photo: String) {
        self.watchId = watchId
        self.name = name
        self.description = description
        self.price = price
        self.currency = currency
        self.refNumber = refNumber
        self.waterResistance = waterResistance
        self.gender = gender
        self.family = family
        self.familyDescription = familyDescription
        self.photo = photo
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case watchId = "watch_id"
        case name
        case description
        case price
        case currency
        case refNumber = "ref_number"
        case waterResistance = "water_resistance"
        case gender
        case family
        case familyDescription = "family_description"
        case photo
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(watchId, forKey: .watchId)
        try container.encode(name, forKey: .name)
        try container.encode(description, forKey: .description)
        try container.encode(price, forKey: .price)
        try container.encode(currency, forKey: .currency)
        try container.encode(refNumber, forKey: .refNumber)
        try container.encode(waterResistance, forKey: .waterResistance)
        try container.encode(gender, forKey: .gender)
        try container.encode(family, forKey: .family)
        try container.encode(familyDescription, forKey: .familyDescription)
        try container.encode(photo, forKey: .photo)
    }
}

